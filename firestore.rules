// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Stats document - read-only for users, write only through cloud functions
    match /stats/{document} {
      allow read: if true;
      allow write: if false; // Only allow through authenticated admin or cloud functions
    }
    
    // Visitors collection - write-only for tracking
    match /visitors/{document} {
      allow read: if false;
      allow create: if true;
      allow update: if request.resource.data.visitorId == resource.data.visitorId;
      allow delete: if false;
    }
    
    // Members collection - write for signup, read for admins
    match /members/{document} {
      allow read: if request.auth != null && request.auth.token.admin == true;
      allow create: if true;
      allow update: if false;
      allow delete: if false;
    }
    
    // Simulations collection - write for tracking, read for analytics
    match /simulations/{document} {
      allow read: if request.auth != null && request.auth.token.admin == true;
      allow create: if true;
      allow update: if false;
      allow delete: if false;
    }
    
    // Discussions collection
    match /discussions/{document} {
      allow read: if true;
      allow create: if true;
      allow update: if request.resource.data.visitorId == resource.data.visitorId;
      allow delete: if false;
    }
    
    // Comments collection - public read for approved, write for new
    match /comments/{document} {
      allow read: if resource.data.approved == true;
      allow create: if request.resource.data.approved == false;
      allow update: if request.auth != null && request.auth.token.admin == true;
      allow delete: if request.auth != null && request.auth.token.admin == true;
    }
  }
}